(self.webpackChunkfe_proj=self.webpackChunkfe_proj||[]).push([[353],{1911:function(e,t,n){"use strict";n.d(t,{Z:function(){return a}});var r=n(7294),c=n(3492);function a(e){return function(t){return r.createElement(o,t,e)}}function o(e){var t=(0,c.e)();return"/"===window.location.pathname?r.createElement("div",null,e.children(e)):r.createElement("div",{className:t("app-body-container")},r.createElement("div",{className:t("app-body-content")},r.createElement("div",{className:t("app-body-route")},e.children(e))))}},2353:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return d}});n(1249),n(8309);var r=n(7294),c=n(3492),a=n(1911),o=n(3750),i=n(471);function l(e,t){var n=e.content,c=e.children;return r.createElement("div",{key:t,className:"project-detail-item"},r.createElement("div",{className:"content"},r.createElement(i.n$y,{className:"content-icon"}),r.createElement("div",{dangerouslySetInnerHTML:{__html:n},className:"content-text"})),r.createElement("div",{className:"children"},c.map((function(e,t){return l(e,"".concat(t))}))))}function s(e){var t=e.project,n=t.name,c=t.repo,a=t.demo,i=t.detail;return r.createElement("div",{className:"project-container"},r.createElement("div",{className:"project-name"},r.createElement(o.kRm,{className:"icon"}),r.createElement("span",{className:"name"},n)),r.createElement("div",{className:"project-item"},r.createElement("div",{className:"project-info"},"Repo: ",r.createElement("a",{className:"common-content-link",href:c,target:"_blank",rel:"noopener noreferrer"},c)),a?r.createElement("div",{className:"project-info"},"Demo: ",r.createElement("a",{className:"common-content-link",href:a,target:"_blank",rel:"noopener noreferrer"},a)):null,r.createElement("div",{className:"project-detail"},i.map((function(e,t){return l(e,"".concat(t))})))))}var p=[{name:"fe-starter: A frontend project scaffolding",repo:"https://github.com/StephanieTM/fe-starter",detail:[{content:"Tech Stack",children:[{content:"React + Typescript + webpack",children:[]}]},{content:"Intro",children:[{content:"This repo is a frontend project scaffolding, aimed at quickly building a React SPA frontend project with out-of-box properly configured webpack, Typescript, Babel, es-lint, husky commit-lint etc.",children:[]},{content:"GitHub Template Repository is used to host this project. As a result you can generate a new repo by using this template, which is quite convenient.",children:[]},{content:"GitHub Pages auto-publishment is supported with GitHub Action CI and navigtion for React Router SPA is well-optimized, so that your project demo website can be automatically built and published once you push your code to the specified branch.",children:[]}]}]},{name:"proj-builder: A Node.js Commandline tool aimed at helping building new projects effectively",repo:"https://github.com/StephanieTM/proj-builder",detail:[{content:"Tech Stack",children:[{content:"Node.js",children:[]}]},{content:"Intro",children:[{content:"This repo is a cli tool for the previous project.",children:[]},{content:'The package has been published to NPM and you can find it via <a class="common-content-link" href="https://www.npmjs.com/package/@stephanietm/proj-builder" target="_blank" rel="noopener noreferrer">https://www.npmjs.com/package/@stephanietm/proj-builder</a>',children:[]}]}]},{name:"webgl-digging: An interactive computer graphics project",repo:"https://github.com/StephanieTM/webgl-digging",demo:"https://stephanietm.github.io/webgl-digging",detail:[{content:"Tech Stack",children:[{content:"original WebGL + glsl + Typescript",children:[]}]},{content:"Intro",children:[{content:"I started this project to assist Computer Graphics studying by implementing interactive computer graphic rendering with original WebGL and glsl shaders.",children:[]},{content:'This repo is inspired by <span class="common-content-quote">Interactive Computer Graphics, A top-down approach with WebGL (Seventh Edition)</span> written by <a class="common-content-link" href="https://www.cs.unm.edu/~angel/" target="_blank" rel="noopener noreferrer">Prof. Edward Angel</a>. I rewrote MV.js in typescript, which includes help funcs for vectors and matrix needed by rendering 3D graphics with WebGL.',children:[]},{content:"I wrote several handy hooks for WebGL app and learnt how to write glsl shaders.",children:[]},{content:"Still working on it and more work will be done continuously.",children:[]}]}]}],d=(0,a.Z)((function(){var e=(0,c.e)();return r.createElement("div",null,r.createElement("div",{className:e("projects-title")},"Projects."),r.createElement("div",{className:"projects"},p.map((function(e){return r.createElement(s,{key:e.name,project:e})}))))}))}}]);